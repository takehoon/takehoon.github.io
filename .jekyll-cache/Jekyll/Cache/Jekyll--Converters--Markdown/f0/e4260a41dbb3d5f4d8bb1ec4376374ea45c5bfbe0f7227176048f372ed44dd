I"^0<h1 id="javascript-기초-빠르게-찍어먹기-2---객체">Javascript 기초 빠르게 찍어먹기 2 - (객체)</h1>

<h2 id="21-개요">2.1 개요</h2>
<p>Javascript는 객체 기반 언어입니다. 어느 언어와 같이 객체는 기능과 속성을 가지고 있으며 이들을 각각 method 와 property로 부르며 정의하여 사용합니다.</p>

<h3 id="211-내장-객체">2.1.1 내장 객체</h3>
<p>내장 객체는 Javascript 엔진에 내장되어 있어 필요한 경우 생성하여 사용합니다.</p>
<ul>
  <li>String</li>
  <li>Date</li>
  <li>Array</li>
  <li>Math</li>
</ul>

<h3 id="212-브라우저-객체-모델">2.1.2 브라우저 객체 모델</h3>
<p>BOM 은 브라우저에 계층 구조로 내장되어 있는 객체를 말합니다.</p>
<ul>
  <li>window</li>
  <li>screen</li>
  <li>location</li>
  <li>history</li>
  <li>navigator</li>
</ul>

<h3 id="213-문서-객체-모델">2.1.3 문서 객체 모델</h3>
<p>DOM 은 HTML 문서 구조를 말합니다. IE8 이하에서는 호환성이 떨어지기 때문에 jQuery를 이용한 DOM 을 주로 사용합니다.</p>

<h2 id="22-내장-객체">2.2 내장 객체</h2>
<h3 id="221-내장-객체-생성하기">2.2.1 내장 객체 생성하기</h3>
<p>내장 객체를 생성하는 기본형은 <strong><em>new</em></strong> keyword를 통해 이뤄집니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">()</span>
</code></pre></div></div>

<p>property와 method는 다음과 같이 정의합니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">smartphone</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">()</span>
<span class="nx">smartphone</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">white</span><span class="dl">"</span>
<span class="nx">smartphone</span><span class="p">.</span><span class="nx">price</span> <span class="o">=</span> <span class="mi">1200000</span><span class="p">;</span>
<span class="nx">smartphone</span><span class="p">.</span><span class="nx">on</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="dl">"</span><span class="s2">smartphone on</span><span class="dl">"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p><strong><em>color</em></strong> 와 <strong><em>price</em></strong>는 property로서 객체의 속성 정보를 가지고 있으며 <strong><em>on()</em></strong> 은 method로서 객체의 기능에 해당합니다.</p>

<h3 id="222--날짜-정보-객체">2.2.2  날짜 정보 객체</h3>
<p>날짜나 시간 관련 정보를 제공받으려면 <strong><em>Date</em></strong> 객체를 생성하여 이용합니다.</p>

<h3 id="223-수학-객체">2.2.3 수학 객체</h3>
<p>수학 관련 기능을 사용하기 위해선 <strong><em>Math</em></strong> 객체를 생성하여 이용합니다.</p>

<h3 id="224-배열-객체">2.2.4 배열 객체</h3>
<p>Javascript에서의 배열 객체는 <strong><em>Array</em></strong> 객체를 생성하여 이용합니다. index가 0부터 시작한다는 점도 타언어와 동일하며 <strong><em>[]</em></strong> 를 이용하여 원소에 접근하는 것 또한 동일합니다. 다만, 각 원소의 자료형이 동일할 필요는 없습니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">()</span>
<span class="nx">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
<span class="nx">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">1</span><span class="dl">"</span>
<span class="nx">arr</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="kc">true</span>
</code></pre></div></div>

<p>물론 <strong><em>Array</em></strong> 를 명시적으로 사용하지 않고도 배열 객체를 생성하는 방법도 존재합니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="dl">"</span><span class="s2">1</span><span class="dl">"</span><span class="p">,</span> <span class="kc">true</span><span class="p">]</span>
</code></pre></div></div>

<p>Javascript는 <strong><em>in</em></strong> keyword 를 지원합니다. 다만, 파이썬과 다른 점은 원소 자체를 가져오는 것이 아닌 원소의 인덱스를 가져옵니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">arr</span><span class="p">){</span>
    <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">arr</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="225-문자열-객체">2.2.5 문자열 객체</h3>
<p>Javascript에서는 문자열도 객체로 취급합니다. 따라서 문자열을 생성하는 기본형은 다음과 같습니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="dl">"</span><span class="s2">test</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>
<p>하지만, 대게 바로 문자형 데이터를 입력하면서 사용합니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">test</span><span class="dl">"</span>
</code></pre></div></div>

<p>문자형 데이터에서 특정 문자를 얻고자 할 때에 <strong><em>charAt()</em></strong> method 를 사용합니다. 물론, <strong><em>[]</em></strong> 을 이용해서도 가능합니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">str</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">str</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</code></pre></div></div>

<p>Javascript 문자형 데이터는 <strong><em>+</em></strong> 를 통해 concatenate 연산도 지원합니다.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">str</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">123</span><span class="dl">"</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">***</span><span class="dl">"</span> <span class="c1">// "123***"</span>
</code></pre></div></div>

<h2 id="23-브라우저-객체-모델-bom">2.3 브라우저 객체 모델 (BOM)</h2>
<p>브라우저에 내장된 객체를 <em>브라우저 객체</em> 라고 합니다.</p>

<h3 id="231-window-객체">2.3.1 Window 객체</h3>
<p>window 객체는 브라우저 객체의 최상위 객체입니다.</p>

<ul>
  <li>open() / close()
팝업 페이지를 띄우거나 닫습니다.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">window</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">title</span><span class="p">,</span> <span class="nx">option</span><span class="p">)</span>
<span class="nb">window</span><span class="p">.</span><span class="nx">close</span><span class="p">()</span>
</code></pre></div>    </div>
    <p><input type="button" value="open/close" onclick="test1()" />
<script>function test1(){window.open("http://takehoon.github.io", "test", "width=300, height=300")}</script></p>
  </li>
  <li>alert()
alert 팝업을 띄웁니다. window 객체를 명시하지 않아도 사용 가능합니다.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">alert</span><span class="p">(</span><span class="nx">message</span><span class="p">)</span>
</code></pre></div>    </div>
    <p><input type="button" value="alert" onclick="test2()" />
<script>function test2(){alert("alert test")}</script></p>
  </li>
  <li>prompt()
prompt 창을 띄웁니다. alert와 마찬가지로 window 객체를 명시하지 않아도 사용 가능합니다.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">prompt</span><span class="p">(</span><span class="nx">query</span><span class="p">,</span> <span class="nx">base</span><span class="p">)</span>
</code></pre></div>    </div>
    <p><input type="button" value="prompt" onclick="test3()" />
<script>function test3(){prompt("hello", "prompt test")}</script></p>
  </li>
  <li>confirm()
confirm 은 확인/취소 창을 말하며 window 객체를 생략 가능합니다.
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">confirm</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span>
</code></pre></div>    </div>
    <p><input type="button" value="confirm" onclick="test4()" />
<script>function test4(){confirm("confirm test")}</script></p>
  </li>
</ul>

<h3 id="232-일정-시간-간격으로-코드-실행하기">2.3.2 일정 시간 간격으로 코드 실행하기</h3>
<p>일정 시간 간격으로 코드를 실행하는 메소드로는 setInterval()과 setTimeout()가 있습니다.</p>

<ul>
  <li>setInterval()
일정 시간 간격으로 반복 실행</li>
  <li>clearInterval()
setInterval() 메소드 실행을 취소</li>
  <li>setTimeout()
일정 시간이 지나면 코드를 실행하고 종료</li>
  <li>clearTimeout()
setTimeout() 메소드 실행을 취소</li>
</ul>

<h3 id="233-screen-객체">2.3.3 screen 객체</h3>
<p>사용자의 모니터 정보를 제공하는 객체입니다.</p>
<ul>
  <li>width</li>
  <li>height</li>
  <li>availWidth</li>
  <li>availHeight</li>
  <li>colorDepth</li>
</ul>

<h3 id="234-location-객체">2.3.4 location 객체</h3>
<p>location 객체는 현재 URL에 대한 정보와 새로고침 메소드를 제공합니다.</p>

<h3 id="235-history-객체">2.3.5 history 객체</h3>
<p>사용자가 방문한 사이트에 대한 정보를 기록하고 이전 사이트로 되돌아갈 수 있는 메소드를 제공합니다.</p>

<h3 id="236-navigator-객체">2.3.6 navigator 객체</h3>
<p>navigator 객체는 사용자의 브라우저와 OS 정보를 제공하는 객체입니다.</p>

<h3 id="237-실습-예제">2.3.7 실습 예제</h3>
<p>현재 사용자의 OS 와 스크린 사이즈 정보를 출력하는 예제.</p>

<p><input type="button" value="test" onclick="test5()" />
<script>
function test5(){
    alert("[OS] : " + navigator.userAgent)
    alert("[screen] : " + screen.width + " : " + screen.height)
}
</script></p>
:ET